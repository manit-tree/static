{"mappings":"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","sources":["<anon>","node_modules/lil-http/http.js","js/bundle.js"],"sourcesContent":["(function () {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireb703\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireb703\"] = parcelRequire;\n}\nparcelRequire.register(\"9z7J9\", function(module, exports) {\n(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) define([\n        \"exports\"\n    ], factory);\n    else {\n        factory(exports);\n        if (module !== null) module.exports = exports = exports.http;\n    }\n})(this, function(exports1) {\n    \"use strict\";\n    var VERSION = \"0.1.17\";\n    var toStr = Object.prototype.toString;\n    var slicer = Array.prototype.slice;\n    var hasOwn = Object.prototype.hasOwnProperty;\n    var hasBind = typeof Function.prototype.bind === \"function\";\n    var origin = location.origin;\n    var originRegex = /^(http[s]?:\\/\\/[a-z0-9\\-\\.\\:]+)[\\/]?/i;\n    var jsonMimeRegex = /application\\/json/;\n    var hasDomainRequest = typeof XDomainRequest !== \"undefined\";\n    var noop = function() {};\n    var defaults = {\n        method: \"GET\",\n        timeout: 30000,\n        auth: null,\n        data: null,\n        headers: null,\n        withCredentials: false,\n        responseType: \"text\"\n    };\n    function isObj(o) {\n        return o && toStr.call(o) === \"[object Object]\" || false;\n    }\n    function assign(target) {\n        var i, l, x, cur, args = slicer.call(arguments).slice(1);\n        for(i = 0, l = args.length; i < l; i += 1){\n            cur = args[i];\n            for(x in cur)if (hasOwn.call(cur, x)) target[x] = cur[x];\n        }\n        return target;\n    }\n    function once(fn) {\n        var called = false;\n        return function() {\n            if (called === false) {\n                called = true;\n                fn.apply(null, arguments);\n            }\n        };\n    }\n    function setHeaders(xhr, headers) {\n        if (!isObj(headers)) return;\n        // Set default content type\n        headers[\"Content-Type\"] = headers[\"Content-Type\"] || headers[\"content-type\"] || http.defaultContent;\n        var buf = Object.keys(headers).reduce(function(buf, field) {\n            var lowerField = field.toLowerCase();\n            // Remove duplicated headers\n            if (lowerField !== field) {\n                if (hasOwn.call(headers, lowerField)) {\n                    delete headers[lowerField];\n                    delete buf[lowerField];\n                }\n            }\n            buf[field] = headers[field];\n            return buf;\n        }, {});\n        Object.keys(buf).forEach(function(field) {\n            xhr.setRequestHeader(field, buf[field]);\n        });\n    }\n    function getHeaders(xhr) {\n        var headers = {}, rawHeaders = xhr.getAllResponseHeaders().trim().split(\"\\n\");\n        rawHeaders.forEach(function(header) {\n            var split = header.trim().split(\":\");\n            var key = split.shift().trim();\n            var value = split.join(\":\").trim();\n            headers[key] = value;\n        });\n        return headers;\n    }\n    function isJSONResponse(xhr) {\n        return jsonMimeRegex.test(xhr.getResponseHeader(\"Content-Type\"));\n    }\n    function encodeParams(params) {\n        return Object.getOwnPropertyNames(params).filter(function(name) {\n            return params[name] !== undefined;\n        }).map(function(name) {\n            var value = params[name] === null ? \"\" : params[name];\n            return encodeURIComponent(name) + (value ? \"=\" + encodeURIComponent(value) : \"\");\n        }).join(\"&\").replace(/%20/g, \"+\");\n    }\n    function parseData(xhr) {\n        var data = null;\n        if (xhr.responseType === \"text\") {\n            data = xhr.responseText;\n            if (isJSONResponse(xhr) && data) data = JSON.parse(data);\n        } else data = xhr.response;\n        return data;\n    }\n    function getStatus(status) {\n        return status === 1223 ? 204 : status // IE9 fix\n        ;\n    }\n    function buildResponse(xhr) {\n        var response = {\n            xhr: xhr,\n            status: getStatus(xhr.status),\n            statusText: xhr.statusText,\n            data: null,\n            headers: {}\n        };\n        if (xhr.readyState === 4) {\n            response.data = parseData(xhr);\n            response.headers = getHeaders(xhr);\n        }\n        return response;\n    }\n    function buildErrorResponse(xhr, error) {\n        var response = buildResponse(xhr);\n        response.error = error;\n        if (error.stack) response.stack = error.stack;\n        return response;\n    }\n    function cleanReferences(xhr) {\n        xhr.onreadystatechange = xhr.onerror = xhr.ontimeout = null;\n    }\n    function isValidResponseStatus(xhr) {\n        var status = getStatus(xhr.status);\n        return status >= 200 && status < 300 || status === 304;\n    }\n    function onError(xhr, cb) {\n        return once(function(err) {\n            cb(buildErrorResponse(xhr, err), null);\n        });\n    }\n    function onLoad(config, xhr, cb) {\n        return function(ev) {\n            if (xhr.readyState === 4) {\n                cleanReferences(xhr);\n                if (isValidResponseStatus(xhr)) cb(null, buildResponse(xhr));\n                else onError(xhr, cb)(ev);\n            }\n        };\n    }\n    function isCrossOrigin(url) {\n        var match = url.match(originRegex);\n        return match && match[1] === origin;\n    }\n    function getURL(config) {\n        var url = config.url;\n        if (isObj(config.params)) url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + encodeParams(config.params);\n        return url;\n    }\n    function XHRFactory(url) {\n        if (hasDomainRequest && isCrossOrigin(url)) return new XDomainRequest();\n        else return new XMLHttpRequest();\n    }\n    function createClient(config) {\n        var method = (config.method || \"GET\").toUpperCase();\n        var auth = config.auth;\n        var url = getURL(config);\n        if (!url || typeof url !== \"string\") throw new TypeError(\"Missing required request URL\");\n        var xhr = XHRFactory(url);\n        if (auth) xhr.open(method, url, true, auth.user, auth.password);\n        else xhr.open(method, url);\n        xhr.withCredentials = config.withCredentials;\n        xhr.responseType = config.responseType;\n        xhr.timeout = config.timeout;\n        setHeaders(xhr, config.headers);\n        return xhr;\n    }\n    function updateProgress(xhr, cb) {\n        return function(ev) {\n            if (ev.lengthComputable) cb(ev, ev.loaded / ev.total);\n            else cb(ev);\n        };\n    }\n    function hasContentTypeHeader(config) {\n        return config && isObj(config.headers) && (config.headers[\"content-type\"] || config.headers[\"Content-Type\"]) || false;\n    }\n    function buildPayload(xhr, config) {\n        var data = config.data;\n        if (isObj(config.data) || Array.isArray(config.data)) {\n            if (hasContentTypeHeader(config) === false) xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            data = JSON.stringify(config.data);\n        }\n        return data;\n    }\n    function timeoutResolver(cb, timeoutId) {\n        return function() {\n            clearTimeout(timeoutId);\n            cb.apply(null, arguments);\n        };\n    }\n    function request(config, cb, progress) {\n        var xhr = createClient(config);\n        var data = buildPayload(xhr, config);\n        var errorHandler = onError(xhr, cb);\n        if (hasBind) xhr.ontimeout = errorHandler;\n        else {\n            var timeoutId = setTimeout(function abort() {\n                if (xhr.readyState !== 4) xhr.abort();\n            }, config.timeout);\n            cb = timeoutResolver(cb, timeoutId);\n            errorHandler = onError(xhr, cb);\n        }\n        xhr.onreadystatechange = onLoad(config, xhr, cb);\n        xhr.onerror = errorHandler;\n        if (typeof progress === \"function\") xhr.onprogress = updateProgress(xhr, progress);\n        try {\n            xhr.send(data || null);\n        } catch (e) {\n            errorHandler(e);\n        }\n        return {\n            xhr: xhr,\n            config: config\n        };\n    }\n    function requestFactory(method) {\n        return function(url, options, cb, progress) {\n            var i, l, cur = null;\n            var config = assign({}, defaults, {\n                method: method\n            });\n            var args = slicer.call(arguments);\n            for(i = 0, l = args.length; i < l; i += 1){\n                cur = args[i];\n                if (typeof cur === \"function\") {\n                    if (args.length === i + 1 && typeof args[i - 1] === \"function\") progress = cur;\n                    else cb = cur;\n                } else if (isObj(cur)) assign(config, cur);\n                else if (typeof cur === \"string\" && !config.url) config.url = cur;\n            }\n            return request(config, cb || noop, progress);\n        };\n    }\n    function http(config, data, cb, progress) {\n        return requestFactory(\"GET\").apply(null, arguments);\n    }\n    http.VERSION = VERSION;\n    http.defaults = defaults;\n    http.defaultContent = \"text/plain\";\n    http.get = requestFactory(\"GET\");\n    http.post = requestFactory(\"POST\");\n    http.put = requestFactory(\"PUT\");\n    http.patch = requestFactory(\"PATCH\");\n    http.head = requestFactory(\"HEAD\");\n    http.delete = http.del = requestFactory(\"DELETE\");\n    return exports1.http = http;\n});\n\n});\n\n\nvar $9z7J9 = parcelRequire(\"9z7J9\");\nwindow.http = (0, (/*@__PURE__*/$parcel$interopDefault($9z7J9)));\n\n})();\n//# sourceMappingURL=bundle.js.map\n","/*! lil-http - v0.1.17 - MIT License - https://github.com/lil-js/http */\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory)\n  } else if (typeof exports === 'object') {\n    factory(exports)\n    if (typeof module === 'object' && module !== null) {\n      module.exports = exports = exports.http\n    }\n  } else {\n    factory((root.lil = root.lil || {}))\n  }\n}(this, function (exports) {\n  'use strict'\n\n  var VERSION = '0.1.17'\n  var toStr = Object.prototype.toString\n  var slicer = Array.prototype.slice\n  var hasOwn = Object.prototype.hasOwnProperty\n  var hasBind = typeof Function.prototype.bind === 'function'\n  var origin = location.origin\n  var originRegex = /^(http[s]?:\\/\\/[a-z0-9\\-\\.\\:]+)[\\/]?/i\n  var jsonMimeRegex = /application\\/json/\n  var hasDomainRequest = typeof XDomainRequest !== 'undefined'\n  var noop = function () {}\n\n  var defaults = {\n    method: 'GET',\n    timeout: 30 * 1000,\n    auth: null,\n    data: null,\n    headers: null,\n    withCredentials: false,\n    responseType: 'text'\n  }\n\n  function isObj (o) {\n    return o && toStr.call(o) === '[object Object]' || false\n  }\n\n  function assign (target) {\n    var i, l, x, cur, args = slicer.call(arguments).slice(1)\n    for (i = 0, l = args.length; i < l; i += 1) {\n      cur = args[i]\n      for (x in cur) if (hasOwn.call(cur, x)) target[x] = cur[x]\n    }\n    return target\n  }\n\n  function once (fn) {\n    var called = false\n    return function () {\n      if (called === false) {\n        called = true\n        fn.apply(null, arguments)\n      }\n    }\n  }\n\n  function setHeaders (xhr, headers) {\n    if (!isObj(headers)) return\n\n    // Set default content type\n    headers['Content-Type'] = headers['Content-Type'] ||\n      headers['content-type'] ||\n      http.defaultContent\n\n    var buf = Object.keys(headers).reduce(function (buf, field) {\n      var lowerField = field.toLowerCase()\n\n      // Remove duplicated headers\n      if (lowerField !== field) {\n        if (hasOwn.call(headers, lowerField)) {\n          delete headers[lowerField]\n          delete buf[lowerField]\n        }\n      }\n\n      buf[field] = headers[field]\n      return buf\n    }, {})\n\n    Object.keys(buf).forEach(function (field) {\n      xhr.setRequestHeader(field, buf[field])\n    })\n  }\n\n  function getHeaders (xhr) {\n    var headers = {}, rawHeaders = xhr.getAllResponseHeaders().trim().split('\\n')\n    rawHeaders.forEach(function (header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      headers[key] = value\n    })\n    return headers\n  }\n\n  function isJSONResponse (xhr) {\n    return jsonMimeRegex.test(xhr.getResponseHeader('Content-Type'))\n  }\n\n  function encodeParams (params) {\n    return Object.getOwnPropertyNames(params).filter(function (name) {\n      return params[name] !== undefined\n    }).map(function (name) {\n      var value = (params[name] === null) ? '' : params[name]\n      return encodeURIComponent(name) + (value ? '=' + encodeURIComponent(value) : '')\n    }).join('&').replace(/%20/g, '+')\n  }\n\n  function parseData (xhr) {\n    var data = null\n    if (xhr.responseType === 'text') {\n      data = xhr.responseText\n      if (isJSONResponse(xhr) && data) data = JSON.parse(data)\n    } else {\n      data = xhr.response\n    }\n    return data\n  }\n\n  function getStatus (status) {\n    return status === 1223 ? 204 : status // IE9 fix\n  }\n\n  function buildResponse (xhr) {\n    var response = {\n      xhr: xhr,\n      status: getStatus(xhr.status),\n      statusText: xhr.statusText,\n      data: null,\n      headers: {}\n    }\n    if (xhr.readyState === 4) {\n      response.data = parseData(xhr)\n      response.headers = getHeaders(xhr)\n    }\n    return response\n  }\n\n  function buildErrorResponse (xhr, error) {\n    var response = buildResponse(xhr)\n    response.error = error\n    if (error.stack) response.stack = error.stack\n    return response\n  }\n\n  function cleanReferences (xhr) {\n    xhr.onreadystatechange = xhr.onerror = xhr.ontimeout = null\n  }\n\n  function isValidResponseStatus (xhr) {\n    var status = getStatus(xhr.status)\n    return status >= 200 && status < 300 || status === 304\n  }\n\n  function onError (xhr, cb) {\n    return once(function (err) {\n      cb(buildErrorResponse(xhr, err), null)\n    })\n  }\n\n  function onLoad (config, xhr, cb) {\n    return function (ev) {\n      if (xhr.readyState === 4) {\n        cleanReferences(xhr)\n        if (isValidResponseStatus(xhr)) {\n          cb(null, buildResponse(xhr))\n        } else {\n          onError(xhr, cb)(ev)\n        }\n      }\n    }\n  }\n\n  function isCrossOrigin (url) {\n    var match = url.match(originRegex)\n    return match && match[1] === origin\n  }\n\n  function getURL (config) {\n    var url = config.url\n    if (isObj(config.params)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + encodeParams(config.params)\n    }\n    return url\n  }\n\n  function XHRFactory (url) {\n    if (hasDomainRequest && isCrossOrigin(url)) {\n      return new XDomainRequest()\n    } else {\n      return new XMLHttpRequest()\n    }\n  }\n\n  function createClient (config) {\n    var method = (config.method || 'GET').toUpperCase()\n    var auth = config.auth\n    var url = getURL(config)\n\n    if (!url || typeof url !== 'string') {\n      throw new TypeError('Missing required request URL')\n    }\n\n    var xhr = XHRFactory(url)\n    if (auth) {\n      xhr.open(method, url, true, auth.user, auth.password)\n    } else {\n      xhr.open(method, url)\n    }\n    xhr.withCredentials = config.withCredentials\n    xhr.responseType = config.responseType\n    xhr.timeout = config.timeout\n    setHeaders(xhr, config.headers)\n    return xhr\n  }\n\n  function updateProgress (xhr, cb) {\n    return function (ev) {\n      if (ev.lengthComputable) {\n        cb(ev, ev.loaded / ev.total)\n      } else {\n        cb(ev)\n      }\n    }\n  }\n\n  function hasContentTypeHeader (config) {\n    return config && isObj(config.headers)\n    && (config.headers['content-type'] || config.headers['Content-Type'])\n    || false\n  }\n\n  function buildPayload (xhr, config) {\n    var data = config.data\n    if (isObj(config.data) || Array.isArray(config.data)) {\n      if (hasContentTypeHeader(config) === false) {\n        xhr.setRequestHeader('Content-Type', 'application/json')\n      }\n      data = JSON.stringify(config.data)\n    }\n    return data\n  }\n\n  function timeoutResolver (cb, timeoutId) {\n    return function () {\n      clearTimeout(timeoutId)\n      cb.apply(null, arguments)\n    }\n  }\n\n  function request (config, cb, progress) {\n    var xhr = createClient(config)\n    var data = buildPayload(xhr, config)\n    var errorHandler = onError(xhr, cb)\n\n    if (hasBind) {\n      xhr.ontimeout = errorHandler\n    } else {\n      var timeoutId = setTimeout(function abort () {\n        if (xhr.readyState !== 4) {\n          xhr.abort()\n        }\n      }, config.timeout)\n      cb = timeoutResolver(cb, timeoutId)\n      errorHandler = onError(xhr, cb)\n    }\n\n    xhr.onreadystatechange = onLoad(config, xhr, cb)\n    xhr.onerror = errorHandler\n    if (typeof progress === 'function') {\n      xhr.onprogress = updateProgress(xhr, progress)\n    }\n\n    try {\n      xhr.send(data || null)\n    } catch (e) {\n      errorHandler(e)\n    }\n\n    return { xhr: xhr, config: config }\n  }\n\n  function requestFactory (method) {\n    return function (url, options, cb, progress) {\n      var i, l, cur = null\n      var config = assign({}, defaults, { method: method })\n      var args = slicer.call(arguments)\n\n      for (i = 0, l = args.length; i < l; i += 1) {\n        cur = args[i]\n        if (typeof cur === 'function') {\n          if (args.length === (i + 1) && typeof args[i - 1] === 'function') {\n            progress = cur\n          } else {\n            cb = cur\n          }\n        } else if (isObj(cur)) {\n          assign(config, cur)\n        } else if (typeof cur === 'string' && !config.url) {\n          config.url = cur\n        }\n      }\n\n      return request(config, cb || noop, progress)\n    }\n  }\n\n  function http (config, data, cb, progress) {\n    return requestFactory('GET').apply(null, arguments)\n  }\n\n  http.VERSION = VERSION\n  http.defaults = defaults\n  http.defaultContent = 'text/plain'\n  http.get = requestFactory('GET')\n  http.post = requestFactory('POST')\n  http.put = requestFactory('PUT')\n  http.patch = requestFactory('PATCH')\n  http.head = requestFactory('HEAD')\n  http.delete = http.del = requestFactory('DELETE')\n\n  return exports.http = http\n}))\n","import http from 'lil-http';\r\n\r\nwindow.http = http;"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","$9z7J9","globalThis","self","window","global","id","exports","init","module","call","err","Error","code","register","factory","exports1","toStr","Object","prototype","toString","slicer","Array","slice","hasOwn","hasOwnProperty","hasBind","Function","bind","origin","location","originRegex","jsonMimeRegex","hasDomainRequest","XDomainRequest","noop","defaults","method","timeout","auth","data","headers","withCredentials","responseType","isObj","o","assign","target","i","l","x","cur","args","arguments","length","getStatus","status","buildResponse","xhr","response","statusText","readyState","responseText","test","getResponseHeader","JSON","parse","rawHeaders","getAllResponseHeaders","trim","split","forEach","header","key","shift","value","join","onError","cb","fn","called","error","stack","apply","requestFactory","url","options","progress","config","request","createClient","params","match","toUpperCase","indexOf","getOwnPropertyNames","filter","name","undefined","map","encodeURIComponent","replace","TypeError","XMLHttpRequest","open","user","password","setHeaders","http","defaultContent","buf","keys","reduce","field","lowerField","toLowerCase","setRequestHeader","isArray","stringify","errorHandler","ontimeout","timeoutId","setTimeout","abort","clearTimeout","onreadystatechange","ev","onerror","onprogress","lengthComputable","loaded","total","send","e","VERSION","get","post","put","patch","head","delete","del","define","amd","a","__esModule","default"],"version":3,"file":"bundle.js.map"}